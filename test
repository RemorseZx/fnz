local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local aiming = false
local aimbotEnabled = false
local espEnabled = false
local trackingEnabled = false
local fovRadius = 70
local fovVisible = false
local lastTarget = nil
local lastMoveTime = 0
local espHighlights, espLabels, lines, nameTags, connections = {}, {}, {}, {}, {}
local whitelist = {} -- Table to store whitelisted players
local renderConnection

repeat task.wait() until LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

-- === MAIN GUI ===
local gui = Instance.new("ScreenGui")
gui.Name = "Aimbot_GUI"
gui.Parent = game:GetService("CoreGui")
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.Size = UDim2.new(0, 280, 0, 400) -- Increased height to 400 for better button spacing
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 5)
title.Text = "MONSY"
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
title.TextSize = 20
title.Font = Enum.Font.GothamBold
title.BorderSizePixel = 0

-- === FOV Circle ===
local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 1
fovCircle.NumSides = 100
fovCircle.Filled = false
fovCircle.Transparency = 1
fovCircle.Color = Color3.fromRGB(255, 255, 255)
fovCircle.Visible = true
fovCircle.Radius = fovRadius

-- === FOV Slider ===
local fovLabel = Instance.new("TextLabel", frame)
fovLabel.Size = UDim2.new(1, 0, 0, 20)
fovLabel.Position = UDim2.new(0, 0, 0, 40)
fovLabel.Text = "FOV: " .. fovRadius
fovLabel.TextColor3 = Color3.new(1, 1, 1)
fovLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
fovLabel.TextSize = 14
fovLabel.Font = Enum.Font.Gotham
fovLabel.BorderSizePixel = 0

local fovSliderFrame = Instance.new("Frame", frame)
fovSliderFrame.Size = UDim2.new(1, -20, 0, 20)
fovSliderFrame.Position = UDim2.new(0, 10, 0, 70)
fovSliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fovSliderFrame.BorderSizePixel = 0
Instance.new("UICorner", fovSliderFrame).CornerRadius = UDim.new(0, 5)

local fovSlider = Instance.new("TextButton", fovSliderFrame)
fovSlider.Size = UDim2.new(0, 20, 1, 0)
fovSlider.Position = UDim2.new((fovRadius - 10) / 190, 0, 0, 0)
fovSlider.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
fovSlider.Text = ""
fovSlider.BorderSizePixel = 0
Instance.new("UICorner", fovSlider).CornerRadius = UDim.new(0, 5)

-- === BUTTON CREATOR (Unified Look) ===
local buttonWidth, buttonHeight, buttonSpacing, startY = 220, 32, 38, 90 -- Adjusted startY to 90, buttonSpacing to 38
local function createButton(text, order)
    local btn = Instance.new("TextButton", frame)
    btn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
    btn.Position = UDim2.new(0.5, -buttonWidth / 2, 0, startY + (order - 1) * buttonSpacing)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    btn.BorderSizePixel = 0
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    return btn
end

-- === Buttons ===
local toggleButton = createButton("Aimbot: OFF", 1)
local hideFovButton = createButton("Show FOV", 2)
local espButton = createButton("ESP: OFF", 3)
local trackAllButton = createButton("Track All: OFF", 4)
local playerMenuButton = createButton("Player List", 5)
local teleportButton = createButton("Teleport", 6)
local healButton = createButton("Heal Those Close to You", 7) -- Heal Button

-- === Heal Button Logic ===
healButton.MouseButton1Click:Connect(function()
    local success, err = pcall(function()
        game:GetService("ReplicatedStorage").Whitelisted.EMS.Remotes.HealPlayerEvent:FireServer("monsy", 100)
    end)
    if not success then
        warn("Failed to heal: " .. err)
    end
end)

-- === TELEPORT GUI ===
local teleportGui = Instance.new("ScreenGui")
teleportGui.Name = "TeleportGui"
teleportGui.Parent = game:GetService("CoreGui")
teleportGui.ResetOnSpawn = false
teleportGui.Enabled = false

local teleportFrame = Instance.new("Frame", teleportGui)
teleportFrame.Size = UDim2.new(0, 300, 0, 250)
teleportFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
teleportFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
teleportFrame.BorderSizePixel = 0
teleportFrame.Active = true
teleportFrame.Draggable = true
Instance.new("UICorner", teleportFrame).CornerRadius = UDim.new(0, 10)

local teleportTitle = Instance.new("TextLabel", teleportFrame)
teleportTitle.Size = UDim2.new(1, 0, 0, 30)
teleportTitle.Position = UDim2.new(0, 0, 0, 5)
teleportTitle.Text = "Teleport Menu"
teleportTitle.TextColor3 = Color3.new(1, 1, 1)
teleportTitle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
teleportTitle.TextSize = 18
teleportTitle.Font = Enum.Font.GothamBold
teleportTitle.BorderSizePixel = 0

local teleportScroll = Instance.new("ScrollingFrame", teleportFrame)
teleportScroll.Size = UDim2.new(1, 0, 1, -35)
teleportScroll.Position = UDim2.new(0, 0, 0, 35)
teleportScroll.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
teleportScroll.BorderSizePixel = 0
teleportScroll.ScrollBarThickness = 6
teleportScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y

local teleportLayout = Instance.new("UIListLayout", teleportScroll)
teleportLayout.SortOrder = Enum.SortOrder.LayoutOrder
teleportLayout.Padding = UDim.new(0, 5)
teleportLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- Teleport Button Creator
local function createTeleportButton(text, position, order)
    local btn = Instance.new("TextButton", teleportScroll)
    btn.Size = UDim2.new(0, 200, 0, 30)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    btn.BorderSizePixel = 0
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.LayoutOrder = order
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    btn.MouseButton1Click:Connect(function()
        local character = LocalPlayer.Character
        if character then
            local hrp = character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.CFrame = CFrame.new(position)
            end
        end
    end)
    return btn
end

-- Teleport Locations
local teleportLocations = {
    {text = "ATM", pos = Vector3.new(-420.0630187988281, 93.10200500488281, 437.6593017578125)},
    {text = "GARAGE", pos = Vector3.new(359.63531494140625, 92.58116912841797, 377.0112609863281)},
    {text = "AMMUNATION", pos = Vector3.new(-849.02294921875, 93.74203491210938, 439.38848876953125)},
    {text = "TRAPHOUSE", pos = Vector3.new(-625.3832397460938, 93.10588073730469, 1665.615478515625)},
    {text = "POLICE DEPARTMENT", pos = Vector3.new(676.9324340820312, 92.9571533203125, 753.1058959960938)},
    {text = "HOSPITAL", pos = Vector3.new(-1636.677978515625, 93.13099670410156, 174.05931091308594)},
    {text = "UWU", pos = Vector3.new(-1388.103759765625, 93.00054168701172, 484.6924133300781)},
    {text = "CLOTHING", pos = Vector3.new(-1155.5364990234375, 93.32319641113281, 493.8457336425781)},
    {text = "FARMING", pos = Vector3.new(2124.314453125, 94.49794006347656, -844.31640625)},
    {text = "STORAGE", pos = Vector3.new(-1373.2489013671875, 92.98085021972656, -45.649696350097656)}
}

-- Create Teleport Buttons
for i, loc in ipairs(teleportLocations) do
    createTeleportButton(loc.text, loc.pos, i)
end

-- Close Button for Teleport GUI
local closeTeleportButton = Instance.new("TextButton", teleportFrame)
closeTeleportButton.Size = UDim2.new(0, 60, 0, 20)
closeTeleportButton.Position = UDim2.new(1, -70, 0, 5)
closeTeleportButton.Text = "Close"
closeTeleportButton.TextColor3 = Color3.new(1, 1, 1)
closeTeleportButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
closeTeleportButton.BorderSizePixel = 0
closeTeleportButton.Font = Enum.Font.Gotham
closeTeleportButton.TextSize = 12
Instance.new("UICorner", closeTeleportButton).CornerRadius = UDim.new(0, 6)
closeTeleportButton.MouseButton1Click:Connect(function()
    teleportGui.Enabled = false
end)

-- Teleport Button Logic
teleportButton.MouseButton1Click:Connect(function()
    teleportGui.Enabled = not teleportGui.Enabled
end)

-- Toggle Teleport GUI with K key (aligned with main GUI)
UIS.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.K then
        teleportGui.Enabled = not teleportGui.Enabled
    end
end)

-- === FOV Slider Drag ===
local dragging = false
fovSlider.MouseButton1Down:Connect(function() dragging = true end)
UIS.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
end)
UIS.InputChanged:Connect(function(i)
    if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX, frameX, frameWidth = i.Position.X, fovSliderFrame.AbsolutePosition.X, fovSliderFrame.AbsoluteSize.X - fovSlider.AbsoluteSize.X
        local relX = math.clamp(mouseX - frameX, 0, frameWidth)
        local percent = relX / frameWidth
        fovRadius = math.floor(percent * 190) + 10
        fovCircle.Radius = fovRadius
        fovSlider.Position = UDim2.new(percent, 0, 0, 0)
        fovLabel.Text = "FOV: " .. fovRadius
    end
end)

-- === GUI TOGGLE KEY (K) ===
UIS.InputBegan:Connect(function(i)
    if i.KeyCode == Enum.KeyCode.K then
        frame.Visible = not frame.Visible
    end
end)

-- ESP setup
local function createHighlightAndLabel(player)
    local function applyESP(character)
        if player ~= LocalPlayer and character then
            if espHighlights[player] then espHighlights[player]:Destroy() end
            if espLabels[player] then espLabels[player]:Destroy() end

            local highlight = Instance.new("Highlight")
            highlight.Parent = character
            highlight.Adornee = character
            highlight.FillColor = Color3.fromRGB(255, 255, 255)
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.FillTransparency = 1
            highlight.Enabled = espEnabled
            espHighlights[player] = highlight

            local billboard = Instance.new("BillboardGui")
            billboard.Parent = character
            billboard.Adornee = character
            billboard.Size = UDim2.new(0, 100, 0, 20)
            billboard.StudsOffset = Vector3.new(0, 3, 0)
            billboard.AlwaysOnTop = true
            billboard.Enabled = espEnabled

            local label = Instance.new("TextLabel", billboard)
            label.Size = UDim2.new(1, 0, 1, 0)
            label.Text = player.Name
            label.TextColor3 = Color3.fromRGB(255, 255, 255)
            label.BackgroundTransparency = 1
            label.TextSize = 10
            label.Font = Enum.Font.Gotham
            label.TextStrokeTransparency = 0.5
            label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

            espLabels[player] = billboard
        end
    end

    if player.Character then applyESP(player.Character) end
    player.CharacterAdded:Connect(applyESP)
end

-- === PLAYER MENU GUI ===
local playerGui = Instance.new("ScreenGui")
playerGui.Name = "PlayerMenuGui"
playerGui.Parent = game:GetService("CoreGui")
playerGui.ResetOnSpawn = false
playerGui.Enabled = false

local playerFrame = Instance.new("Frame", playerGui)
playerFrame.Size = UDim2.new(0, 400, 0, 300)
playerFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
playerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
playerFrame.BorderSizePixel = 0
playerFrame.Active = true
playerFrame.Draggable = true
Instance.new("UICorner", playerFrame).CornerRadius = UDim.new(0, 10)

local titleLabel = Instance.new("TextLabel", playerFrame)
titleLabel.Size = UDim2.new(1, 0, 0, 35)
titleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 20
titleLabel.Text = "PLAYER LIST"
titleLabel.BorderSizePixel = 0

local playerScroll = Instance.new("ScrollingFrame", playerFrame)
playerScroll.Size = UDim2.new(0.5, 0, 1, -35)
playerScroll.Position = UDim2.new(0, 0, 0, 35)
playerScroll.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
playerScroll.BorderSizePixel = 0
playerScroll.ScrollBarThickness = 6
playerScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y

local listLayout = Instance.new("UIListLayout", playerScroll)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)

local actionFrame = Instance.new("Frame", playerFrame)
actionFrame.Size = UDim2.new(0.5, 0, 1, -35)
actionFrame.Position = UDim2.new(0.5, 0, 0, 35)
actionFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
actionFrame.BorderSizePixel = 0

local selectedPlayer = nil

local infoLabel = Instance.new("TextLabel", actionFrame)
infoLabel.Size = UDim2.new(1, 0, 0, 40)
infoLabel.Text = "Selected: None"
infoLabel.TextColor3 = Color3.new(1, 1, 1)
infoLabel.BackgroundTransparency = 1
infoLabel.Font = Enum.Font.GothamBold
infoLabel.TextSize = 18

-- === BUTTON MAKER ===
local function makeBtn(text, posY)
    local btn = Instance.new("TextButton", actionFrame)
    btn.Size = UDim2.new(0.8, 0, 0, 30)
    btn.Position = UDim2.new(0.1, 0, 0, posY)
    btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.Text = text
    btn.BorderSizePixel = 0
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    return btn
end

-- Buttons
local tpButton = makeBtn("Teleport to Player", 60)
local bringButton = makeBtn("Bring Player", 100)
local whitelistButton = makeBtn("Whitelist: OFF", 140)

-- Camera vars
local isBringing = false
local bringConnection

-- === POPULATE PLAYER LIST ===
local function refreshPlayers()
    for _, c in ipairs(playerScroll:GetChildren()) do
        if c:IsA("TextButton") then c:Destroy() end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(1, -8, 0, 28)
            btn.Text = plr.Name .. (whitelist[plr] and " [Whitelisted]" or "")
            btn.TextColor3 = Color3.new(1, 1, 1)
            btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.BorderSizePixel = 0
            btn.Parent = playerScroll
            Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

            btn.MouseButton1Click:Connect(function()
                selectedPlayer = plr
                infoLabel.Text = "Selected: " .. plr.Name
                whitelistButton.Text = whitelist[plr] and "Whitelist: ON" or "Whitelist: OFF"
            end)
        end
    end
end
refreshPlayers()
Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(refreshPlayers)

-- === TELEPORT BUTTON ===
tpButton.MouseButton1Click:Connect(function()
    if not selectedPlayer then return end
    local myChar = LocalPlayer.Character
    local targetChar = selectedPlayer.Character
    if myChar and targetChar then
        local myHRP = myChar:FindFirstChild("HumanoidRootPart") or myChar:WaitForChild("HumanoidRootPart", 2)
        local tHRP = targetChar:FindFirstChild("HumanoidRootPart") or targetChar:WaitForChild("HumanoidRootPart", 2)
        if myHRP and tHRP then
            myHRP.CFrame = tHRP.CFrame * CFrame.new(2, 0, 0)
        end
    end
end)

-- === BRING BUTTON ===
bringButton.MouseButton1Click:Connect(function()
    if not selectedPlayer then return end
    local success, err = pcall(function()
        if not isBringing then
            isBringing = true
            bringButton.Text = "Unbring Player"
            
            local targetChar = selectedPlayer.Character
            local originalCFrame = nil
            if targetChar then
                local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
                if targetHRP then
                    originalCFrame = targetHRP.CFrame
                end
            end

            local myChar = LocalPlayer.Character
            if targetChar and myChar then
                local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
                local myHRP = myChar:FindFirstChild("HumanoidRootPart")
                if targetHRP and myHRP then
                    targetHRP.Anchored = true
                    local bringPos = myHRP.CFrame * CFrame.new(0, 0, -8)
                    targetHRP.CFrame = bringPos -- Brings player regardless of distance
                end
            end
            
            bringConnection = { OriginalCFrame = originalCFrame }
        else
            isBringing = false
            bringButton.Text = "Bring Player"
            
            local targetChar = selectedPlayer and selectedPlayer.Character
            if targetChar then
                local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")
                if targetHRP and bringConnection and bringConnection.OriginalCFrame then
                    targetHRP.CFrame = bringConnection.OriginalCFrame
                    targetHRP.Anchored = false
                end
            end
            
            if bringConnection then
                bringConnection = nil
            end
        end
    end)
    if not success then
        warn("Failed to bring player: " .. err)
    end
end)

-- === WHITELIST BUTTON ===
whitelistButton.MouseButton1Click:Connect(function()
    if not selectedPlayer then return end
    if whitelist[selectedPlayer] then
        whitelist[selectedPlayer] = nil
        whitelistButton.Text = "Whitelist: OFF"
    else
        whitelist[selectedPlayer] = true
        whitelistButton.Text = "Whitelist: ON"
    end
    refreshPlayers()
end)

-- === OPEN / CLOSE GUI ===
playerMenuButton.MouseButton1Click:Connect(function()
    playerGui.Enabled = not playerGui.Enabled
end)

UIS.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.K then
        playerGui.Enabled = not playerGui.Enabled
    end
end)

-- === Button Logic ===
hideFovButton.MouseButton1Click:Connect(function()
    fovVisible = not fovVisible
    fovCircle.Visible = fovVisible
    hideFovButton.Text = fovVisible and "Hide FOV" or "Show FOV"
end)

toggleButton.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    toggleButton.Text = aimbotEnabled and "Aimbot: ON" or "Aimbot: OFF"
end)

espButton.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espButton.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    for _, h in pairs(espHighlights) do h.Enabled = espEnabled end
    for _, l in pairs(espLabels) do l.Enabled = espEnabled end
end)

trackAllButton.MouseButton1Click:Connect(function()
    toggleESP()
end)

UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.T then
        toggleESP()
    end
end)

-- === TRACK ALL ===
local function removeESP(player)
    if lines[player] then
        lines[player]:Destroy()
        lines[player] = nil
    end
    if nameTags[player] then
        nameTags[player]:Destroy()
        nameTags[player] = nil
    end
end

local function createESP(player)
    if player == LocalPlayer then return end

    local function setup()
        removeESP(player)

        local character = player.Character
        if not character then return end

        local hrp = character:FindFirstChild("HumanoidRootPart")
        local head = character:FindFirstChild("Head")
        if not hrp or not head then return end

        local line = Instance.new("Part")
        line.Anchored = true
        line.CanCollide = false
        line.Color = Color3.new(1, 1, 1)
        line.Material = Enum.Material.Neon
        line.Transparency = trackingEnabled and 0 or 1
        line.Size = Vector3.new(0.1, 0.1, 1)
        line.Name = "ESP_Line_" .. player.Name
        line.Parent = workspace
        lines[player] = line

        local billboard = Instance.new("BillboardGui")
        billboard.Name = "NameTag"
        billboard.Size = UDim2.new(0, 100, 0, 30)
        billboard.StudsOffset = Vector3.new(0, 2.2, 0)
        billboard.AlwaysOnTop = true
        billboard.Adornee = head
        billboard.Enabled = trackingEnabled

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = player.DisplayName .. "\n(" .. player.Name .. ")"
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.TextStrokeTransparency = 0.4
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextScaled = true
        textLabel.Parent = billboard

        billboard.Parent = head
        nameTags[player] = billboard
    end

    if player.Character then
        setup()
    end

    local conn = player.CharacterAdded:Connect(function()
        task.wait(1)
        if trackingEnabled then setup() end
    end)
    table.insert(connections, conn)
end

local function updateESP()
    if not trackingEnabled then return end
    local origin = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not origin then return end

    -- Tracks all players with valid characters, regardless of distance
    for player, line in pairs(lines) do
        local target = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if target and target:IsDescendantOf(workspace) then
            local direction = target.Position - origin.Position
            local distance = direction.Magnitude
            line.Size = Vector3.new(0.1, 0.1, distance)
            line.CFrame = CFrame.new(origin.Position, target.Position) * CFrame.new(0, 0, -distance / 2)
            line.Transparency = 0
            if nameTags[player] then nameTags[player].Enabled = true end
        else
            removeESP(player)
        end
    end
end

local function clearESP()
    for _, line in pairs(lines) do
        if line then line:Destroy() end
    end
    for _, tag in pairs(nameTags) do
        if tag then tag:Destroy() end
    end
    for _, conn in ipairs(connections) do
        if conn then conn:Disconnect() end
    end
    if renderConnection then
        renderConnection:Disconnect()
        renderConnection = nil
    end
    lines, nameTags, connections = {}, {}, {}
end

function toggleESP()
    trackingEnabled = not trackingEnabled
    trackAllButton.Text = trackingEnabled and "Track All: ON" or "Track All: OFF"

    if trackingEnabled then
        warn("📡 Track All ON (tracks all players, any distance)")
        for _, player in ipairs(Players:GetPlayers()) do
            createESP(player)
        end
        table.insert(connections, Players.PlayerAdded:Connect(function(player)
            if trackingEnabled then createESP(player) end
        end))
        renderConnection = RunService.RenderStepped:Connect(updateESP)
    else
        warn("📴 Track All OFF")
        clearESP()
    end
end

-- Handle players
Players.PlayerAdded:Connect(createHighlightAndLabel)
Players.PlayerRemoving:Connect(function(p)
    if espHighlights[p] then espHighlights[p]:Destroy() end
    if espLabels[p] then espLabels[p]:Destroy() end
    removeESP(p)
    whitelist[p] = nil -- Remove from whitelist
    refreshPlayers()
end)
for _, p in pairs(Players:GetPlayers()) do createHighlightAndLabel(p) end

-- === AIMBOT ===
local function getClosestTarget()
    local closest, targetPart = math.huge, nil
    local mouse = UIS:GetMouseLocation()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("Head") and not whitelist[p] then
            local head = p.Character.Head
            local hum = p.Character:FindFirstChildOfClass("Humanoid")
            if hum and hum.Health > 0 then
                local screen, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local dist = (Vector2.new(screen.X, screen.Y) - mouse).Magnitude
                    if dist < closest and dist <= fovRadius then
                        closest, targetPart = dist, head
                    end
                end
            end
        end
    end
    return targetPart
end

local function snapToTarget(target)
    local now = tick()
    if now - lastMoveTime < 0.016 then return end
    local screen, onScreen = Camera:WorldToViewportPoint(target.Position)
    if onScreen then
        local m = UIS:GetMouseLocation()
        local dx, dy = screen.X - m.X, screen.Y - m.Y
        if math.abs(dx) > 0.5 or math.abs(dy) > 0.5 then
            mousemoverel(dx, dy)
            lastMoveTime = now
        end
    end
end

UIS.InputBegan:Connect(function(i, gp)
    if not gp and i.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming, isFirstLock = true, true
    end
end)
UIS.InputEnded:Connect(function(i, gp)
    if not gp and i.UserInputType == Enum.UserInputType.MouseButton2 then
        aiming, lastTarget, isFirstLock = false, nil, false
    end
end)

RunService.RenderStepped:Connect(function()
    fovCircle.Position = UIS:GetMouseLocation()
    fovCircle.Visible = fovVisible
    if aiming and aimbotEnabled then
        local target = getClosestTarget()
        if target then
            snapToTarget(target)
            isFirstLock, lastTarget = false, target
        else
            lastTarget = nil
        end
    end
end)

--// GUI Setup
local loadGui = Instance.new("ScreenGui")
loadGui.Name = "LOADING_SCREEN"
loadGui.Parent = game:GetService("CoreGui")
loadGui.ResetOnSpawn = false

local bg = Instance.new("Frame", loadGui)
bg.Size = UDim2.new(0, 500, 0, 250)
bg.Position = UDim2.new(0.5, -250, 0.5, -125)
bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
bg.BorderSizePixel = 0
bg.ZIndex = 1

local uigradient = Instance.new("UIGradient")
uigradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(5, 5, 5)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
}
uigradient.Parent = bg

Instance.new("UICorner", bg).CornerRadius = UDim.new(0, 10)

--// Matrix Rain Background
local matrixRain = Instance.new("Frame", bg)
matrixRain.Size = UDim2.new(1, 0, 1, 0)
matrixRain.BackgroundTransparency = 0.8
matrixRain.BorderSizePixel = 0

local matrixUIGradient = Instance.new("UIGradient")
matrixUIGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 10, 0)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 50, 0)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 10, 0))
}
matrixUIGradient.Parent = matrixRain

local isLocked = false

local function createMatrixDrop()
	local drop = Instance.new("TextLabel", matrixRain)
	drop.Size = UDim2.new(0, 10, 0, math.random(20, 60))
	drop.Position = UDim2.new(0, math.random(0, 490), 0, -drop.Size.Y.Offset)
	drop.BackgroundTransparency = 1
	drop.Text = string.rep(string.char(math.random(33, 126)), math.random(1, 5))
	drop.TextColor3 = Color3.fromRGB(0, math.random(150, 255), 0)
	drop.TextSize = 12
	drop.Font = Enum.Font.Code
	drop.ZIndex = 2

	task.spawn(function()
		while drop.Position.Y.Offset < 250 and matrixRain.Parent do
			drop.Position = drop.Position + UDim2.new(0, 0, 0, math.random(1, 3))
			drop.TextTransparency = math.random(30, 70) / 100
			task.wait(0.03)
		end
		drop:Destroy()
	end)
end

for i = 1, 25 do
	createMatrixDrop()
end

task.spawn(function()
	while matrixRain.Parent do
		task.wait(0.05)
		if not isLocked then createMatrixDrop() end
	end
end)

--// Title
local titleLabel = Instance.new("TextLabel", bg)
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.Text = "Administrator Monsy"
titleLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
titleLabel.TextSize = 16
titleLabel.Font = Enum.Font.Code
titleLabel.BorderSizePixel = 0
titleLabel.ZIndex = 3

--// Output text
local outputLabel = Instance.new("TextLabel", bg)
outputLabel.Size = UDim2.new(0, 480, 0, 180)
outputLabel.Position = UDim2.new(0.5, -240, 0, 30)
outputLabel.BackgroundTransparency = 1
outputLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
outputLabel.TextSize = 14
outputLabel.Font = Enum.Font.Code
outputLabel.TextWrapped = true
outputLabel.TextXAlignment = Enum.TextXAlignment.Left
outputLabel.TextYAlignment = Enum.TextYAlignment.Top
outputLabel.ZIndex = 3
outputLabel.Text = "> Type: YOUR KEY \n> Scanning system: [X7K9P2M4]\n> [ERROR: Access Denied - Retrying]\n> Generating noise...\n> "

--// Loading bar
local loadingBarBg = Instance.new("Frame", bg)
loadingBarBg.Size = UDim2.new(0, 460, 0, 20)
loadingBarBg.Position = UDim2.new(0.5, -230, 0, 210)
loadingBarBg.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Instance.new("UICorner", loadingBarBg).CornerRadius = UDim.new(0, 5)
loadingBarBg.ZIndex = 3

local loadingBar = Instance.new("Frame", loadingBarBg)
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Instance.new("UICorner", loadingBar).CornerRadius = UDim.new(0, 5)
loadingBar.ZIndex = 4

local loadingText = Instance.new("TextLabel", loadingBarBg)
loadingText.Size = UDim2.new(1, 0, 1, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Bypassing: 0%"
loadingText.TextColor3 = Color3.fromRGB(0, 255, 0)
loadingText.TextSize = 12
loadingText.Font = Enum.Font.Code
loadingText.ZIndex = 5

--// Blinking cursor
local cursor = Instance.new("TextLabel", bg)
cursor.Size = UDim2.new(0, 10, 0, 20)
cursor.Position = UDim2.new(0.5, -230, 0, 200)
cursor.BackgroundTransparency = 1
cursor.Text = "*"
cursor.TextColor3 = Color3.fromRGB(0, 255, 0)
cursor.TextSize = 14
cursor.Font = Enum.Font.Code
cursor.ZIndex = 3

--// 5 KEYS SYSTEM
local validKeys = {"shnz", "mnx", "devil", "and", "what"}
local currentInput = ""

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input)
	if isLocked then return end

	local key = input.KeyCode
	local char = key.Name:match("^%a$") or (key.Name == "Space" and " ") or nil

	if char then
		currentInput = currentInput .. char:lower()
		outputLabel.Text = outputLabel.Text .. char:lower()

	elseif key == Enum.KeyCode.Backspace and #currentInput > 0 then
		currentInput = currentInput:sub(1, -2)
		outputLabel.Text = outputLabel.Text:sub(1, -2)

	elseif key == Enum.KeyCode.Return then
		if table.find(validKeys, currentInput) then
			isLocked = true
			cursor.Visible = false
			matrixRain:Destroy()

			local messages = {
				"discord : theyluvmonsy",
				"Launching SecuREV v3.0 hack module...",
				"Authenticating with root access [75%]...",
				"[WARNING: Firewall detected] Bypassing X-13 layer...",
				"Decrypting AES-256 codes [Progress: 40%]...",
				"Executing bypass sequence [" .. currentInput:upper() .. "]...",
				"Neutralizing firewall protocols [85%]...",
				"[ERROR: Retry] Verifying system integrity [99%]...",
				"Overriding admin controls [Admin: ROOT]...",
				"Decrypting SecuREV encryption [95%]...",
				"Finalizing hack operation [MONSY v2.0]...",
				"Access Complete"
			}

			outputLabel.Text = "> Initiating " .. currentInput:upper() .. " access...\n"

			--// Loading bar animation
			task.spawn(function()
				for i = 1, 100 do
					loadingBar.Size = UDim2.new(0, i * 4.6, 1, 0)
					loadingText.Text = "Bypassing: " .. i .. "% [Status: Active]"
					local pulse = math.sin(i * 0.1) * 10
					loadingBar.BackgroundColor3 = Color3.fromRGB(0, math.clamp(255 - pulse, 0, 255), 0)
					task.wait(0.07)
				end
				loadingText.Text = "Bypassing: 100% [Status: Complete]"
			end)

			for i, msg in ipairs(messages) do
				task.wait(math.random(500, 1000) / 1000)
				outputLabel.Text = outputLabel.Text .. "> " .. msg .. "\n"
			end

			task.wait(7)

			-- Fade out effect
			for i = 0, 1, 0.1 do
				outputLabel.TextTransparency = i
				loadingBarBg.BackgroundTransparency = i
				loadingBar.BackgroundTransparency = i
				loadingText.TextTransparency = i
				task.wait(0.1)
			end

			outputLabel.Text = outputLabel.Text .. "> System unlocked. Deploying MONSY Menu v2.0...\n"
			task.wait(1)
			loadGui:Destroy()

			-- Safety check for frame (if it exists)
			if frame then
				frame.Visible = true
			end
		else
			outputLabel.Text = outputLabel.Text .. "\n> INVALID KEY. Try: MO KAYA BUMILI\n> "
			currentInput = ""
		end
	end
end)

--// Cursor blinking
task.spawn(function()
	local blink = true
	while task.wait(0.5) do
		if not isLocked then
			cursor.Visible = blink
			blink = not blink
		end
	end
end)

--// Text flicker
task.spawn(function()
	while not isLocked do
		task.wait(math.random(100, 300) / 1000)
		outputLabel.TextTransparency = math.random(10, 30) / 100
		task.wait(0.1)
		outputLabel.TextTransparency = 0
	end
end)

--// Random noise effect
task.spawn(function()
	task.wait(1)
	if not isLocked then
		for i = 1, 20 do
			outputLabel.Text = outputLabel.Text .. string.char(math.random(33, 126))
			task.wait(0.03)
		end
		outputLabel.Text = outputLabel.Text .. "\n> Noise cleared. Awaiting command.\n> "
	end
end)

--// Audio cues
local SoundService = game:GetService("SoundService")
task.spawn(function()
	if SoundService then
		local static = Instance.new("Sound", bg)
		static.SoundId = "rbxassetid://183847848"
		static.Volume = 0.2
		static.Looped = false
		task.wait(1)
		if not isLocked then static:Play() end

		local beep = Instance.new("Sound", bg)
		beep.SoundId = "rbxassetid://1837829537"
		beep.Volume = 0.3
		beep.Looped = false
		task.wait(2)
		if not isLocked then beep:Play() end
	end
end)

-- Hide main frame until loaded
if frame then
	frame.Visible = false
end
